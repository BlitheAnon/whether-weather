function openCartDrawer(){document.querySelector(".cart-drawer").classList.add("cart-drawer--active"),document.querySelector("body").classList.add("cart-drawer-open")}function closeCartDrawer(){document.querySelector(".cart-drawer").classList.remove("cart-drawer--active"),document.querySelector("body").classList.remove("cart-drawer-open")}function updateCartItemCounts(count){document.querySelectorAll(".cart-count").forEach(el=>{el.textContent=count})}async function updateCartDrawer(){const text=await(await fetch("/?section_id=cart-drawer")).text(),html=document.createElement("div");html.innerHTML=text;const newBox=html.querySelector(".cart-drawer").innerHTML;document.querySelector(".cart-drawer").innerHTML=newBox,addCartDrawerListeners()}function addCartDrawerListeners(){document.querySelectorAll(".cart-drawer .quantity-selector button.quantity-change").forEach(button=>{button.addEventListener("click",async()=>{classes=button.classList;const key=button.parentElement.parentElement.parentElement.parentElement.getAttribute("data-line-item-key"),currentQuantity=Number(button.parentElement.querySelector("input").value),isUp=button.classList.contains("quantity-plus"),toRemove=button.classList.contains("quantity-remove"),newQuantity=isUp?currentQuantity+1:currentQuantity-1,cart=await(await fetch("/cart/update.js",{method:"post",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({updates:{[key]:newQuantity}})})).json();updateCartItemCounts(cart.item_count),updateCartDrawer()})}),document.querySelectorAll("button.quantity-remove").forEach(button=>{button.addEventListener("click",async()=>{const key=button.parentElement.parentElement.parentElement.parentElement.getAttribute("data-line-item-key"),cart=await(await fetch("/cart/update.js",{method:"post",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({updates:{[key]:0}})})).json();updateCartItemCounts(cart.item_count),updateCartDrawer()})}),document.querySelector(".cart-drawer-box").addEventListener("click",e=>{e.stopPropagation()}),document.querySelectorAll(".cart-drawer-close").forEach(el=>{el.addEventListener("click",()=>{closeCartDrawer()})})}addCartDrawerListeners(),document.querySelectorAll('form[action="/cart/add"]').forEach(form=>{form.addEventListener("submit",async e=>{e.preventDefault(),await fetch("/cart/add",{method:"post",body:new FormData(form)});const cart=await(await fetch("/cart.js")).json();updateCartItemCounts(cart.item_count),await updateCartDrawer(),openCartDrawer()})}),document.querySelectorAll('a[href="/cart"]').forEach(a=>{a.addEventListener("click",e=>{e.preventDefault(),openCartDrawer()})}),jQuery(document).ready(function($){$(".cart-drawer-items").on("click",".combo-box button",function(e){e.preventDefault();var upsellId=$(this).closest(".upsell").data("upsell_id");console.log("upsell clicked",upsellId),CartJS.addItem(upsellId,"1",{},{success:function(data,textStatus,jqXHR){jQuery.getJSON("/cart.js",function(cart){updateCartDrawer()})},error:function(jqXHR,textStatus,errorThrown){console.log("Error: "+errorThrown+"!")}})})});
//# sourceMappingURL=/cdn/shop/t/72/assets/cart-drawer.js.map?v=52688385340659672141725965503
